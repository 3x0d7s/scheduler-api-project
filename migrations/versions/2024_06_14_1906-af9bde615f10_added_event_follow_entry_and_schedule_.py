"""added event, follow_entry and schedule models

Revision ID: af9bde615f10
Revises: 830ca599608a
Create Date: 2024-06-14 19:06:47.041720

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'af9bde615f10'
down_revision: Union[str, None] = '830ca599608a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('schedule',
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', NOW())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', NOW())"), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], name=op.f('fk_schedule_creator_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_schedule'))
    )
    op.create_table('event',
    sa.Column('schedule_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('day_of_week', sa.Enum('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY', name='dayofweek'), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', NOW())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', NOW())"), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedule.id'], name=op.f('fk_event_schedule_id_schedule')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_event'))
    )
    op.create_table('follow_entry',
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('followed_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', NOW())"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', NOW())"), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['followed_id'], ['schedule.id'], name=op.f('fk_follow_entry_followed_id_schedule')),
    sa.ForeignKeyConstraint(['follower_id'], ['user.id'], name=op.f('fk_follow_entry_follower_id_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_follow_entry'))
    )
    op.create_table('followed_association',
    sa.Column('followed_id', sa.Integer(), nullable=False),
    sa.Column('follow_entry_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['follow_entry_id'], ['follow_entry.id'], name=op.f('fk_followed_association_follow_entry_id_follow_entry')),
    sa.ForeignKeyConstraint(['followed_id'], ['schedule.id'], name=op.f('fk_followed_association_followed_id_schedule')),
    sa.PrimaryKeyConstraint('followed_id', 'follow_entry_id', name=op.f('pk_followed_association'))
    )
    op.create_table('follower_association',
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('follow_entry_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['follow_entry_id'], ['follow_entry.id'], name=op.f('fk_follower_association_follow_entry_id_follow_entry')),
    sa.ForeignKeyConstraint(['follower_id'], ['user.id'], name=op.f('fk_follower_association_follower_id_user')),
    sa.PrimaryKeyConstraint('follower_id', 'follow_entry_id', name=op.f('pk_follower_association'))
    )
    op.add_column('user', sa.Column('name', sa.String(length=50), nullable=False))
    op.add_column('user', sa.Column('surname', sa.String(length=50), nullable=False))
    op.add_column('user', sa.Column('hashed_password', sa.String(length=1024), nullable=False))
    op.add_column('user', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('user', sa.Column('is_superuser', sa.Boolean(), nullable=False))
    op.add_column('user', sa.Column('is_verified', sa.Boolean(), nullable=False))
    op.alter_column('user', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint('uq_user_email', 'user', type_='unique')
    op.drop_constraint('uq_user_username', 'user', type_='unique')
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.drop_column('user', 'username')
    op.drop_column('user', 'password')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('user', sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.create_unique_constraint('uq_user_username', 'user', ['username'])
    op.create_unique_constraint('uq_user_email', 'user', ['email'])
    op.alter_column('user', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('user', 'is_verified')
    op.drop_column('user', 'is_superuser')
    op.drop_column('user', 'is_active')
    op.drop_column('user', 'hashed_password')
    op.drop_column('user', 'surname')
    op.drop_column('user', 'name')
    op.drop_table('follower_association')
    op.drop_table('followed_association')
    op.drop_table('follow_entry')
    op.drop_table('event')
    op.drop_table('schedule')
    # ### end Alembic commands ###
